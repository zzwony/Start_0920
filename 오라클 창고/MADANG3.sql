SELECT * FROM BOOK;
SELECT * FROM ORDERS;
SELECT * FROM CUSTOMER;

SELECT BOOKNAME
    FROM BOOK
    WHERE BOOKID = 1;

SELECT SUM(SALEPRICE)
    FROM ORDERS
    WHERE CUSTID = 1;

SELECT COUNT(PUBLISHER)
    FROM BOOK JOIN ORDERS USING (BOOKID)
    WHERE CUSTID = 1; 

SELECT (PRICE - SALEPRICE)
    FROM BOOK B, ORDERS O
    WHERE B.BOOKID = O.BOOKID
        AND O.CUSTID = 1;

SELECT BOOKNAME, PUBLISHER, PRICE
    FROM BOOK JOIN ORDERS USING(BOOKID)
    WHERE CUSTID = 1;

SELECT BOOKNAME, PUBLISHER, PRICE
    FROM BOOK JOIN ORDERS USING(BOOKID)
    WHERE CUSTID <> 1;

SELECT BOOKNAME, PUBLISHER, PRICE
FROM BOOK
MINUS
SELECT BOOKNAME, PUBLISHER, PRICE
FROM BOOK JOIN ORDERS USING (BOOKID)
WHERE CUSTID = 1; 

SELECT NAME, ADDRESS
    FROM CUSTOMER
    WHERE NAME LIKE ('김%');

SELECT NAME, ADDRESS
    FROM CUSTOMER
    WHERE NAME LIKE ('_연%');

SELECT ORDERID
    FROM ORDERS
    WHERE ORDERDATE BETWEEN '2014/07/04' AND '2014/07/07';

SELECT ORDERID, BOOKNAME
    FROM ORDERS JOIN BOOK USING(BOOKID)
    WHERE ORDERDATE BETWEEN '2014/07/04' AND '2014/07/07';

SELECT SUM(SALEPRICE), AVG(SALEPRICE)
    FROM ORDERS;

SELECT NAME, SUM(SALEPRICE)
    FROM CUSTOMER JOIN ORDERS USING(CUSTID)
    GROUP BY NAME;
 
SELECT NAME, BOOKNAME
FROM CUSTOMER JOIN ORDERS USING (CUSTID)
    JOIN BOOK USING (BOOKID); 

SELECT NAME, AVG(SALEPRICE)
FROM CUSTOMER JOIN ORDERS USING (CUSTID)
GROUP BY NAME
HAVING AVG(SALEPRICE) > (SELECT AVG(SALEPRICE) FROM ORDERS); 

INSERT INTO BOOK
    VALUES(11, '스포츠 세계', '대한미디어', 10000);

INSERT INTO CUSTOMER
    VALUES(6, '손흥민', '춘천', NULL);

UPDATE BOOK
    SET PUBLISHER = '대한출판사'
    WHERE PUBLISHER = '대한미디어';

