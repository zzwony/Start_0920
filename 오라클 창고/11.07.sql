-- 123 * 123 은 얼마인지 출력하기
SELECT 123*123 FROM DUAL;

-- 오늘 시스템 날짜 출력하기
SELECT SYSDATE FROM DUAL;

--ROUND 함수 사용하여 날짜 데이터 출력하기
SELECT SYSDATE,
ROUND(SYSDATE, 'CC') AS FORMAT_CC,
ROUND(SYSDATE, 'YYYY') AS FORMAT_YYYY,
ROUND(SYSDATE, 'Q') AS FORMAT_Q,
ROUND(SYSDATE, 'DDD') AS FORMAT_DDD,
ROUND(SYSDATE, 'HH') AS FORMAT_HH
FROM DUAL;

--숫자와 문자열(숫자)을 더하여 출력하기
SELECT EMPNO, ENAME, SAL, SAL + '500' FROM EMP
WHERE ENAME = 'SCOTT';



-- TO_CHAR, TO_NUMBER, TO_DATE
-- 숫자에서 날짜로 바로 바꿀수 없다. 그래서 문자에서 한번 거쳐서 바뀐다.

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 현재날짜시간 FROM DUAL;

SELECT SYSDATE,
TO_CHAR(SYSDATE, 'MM') AS MM,
TO_CHAR(SYSDATE, 'MON') AS MON,
TO_CHAR(SYSDATE, 'MONTH') AS MONTH,
TO_CHAR(SYSDATE, 'DD') AS DD,
TO_CHAR(SYSDATE, 'DY') AS DY,
TO_CHAR(SYSDATE, 'DAY') AS DAY
FROM DUAL;

SELECT SYSDATE,
TO_CHAR(SYSDATE, ' AM HH24:MI:SS')
FROM DUAL;

SELECT SAL,
TO_CHAR(SAL, '$999,999') AS SAL_$,
TO_CHAR(SAL, 'L999,999') AS SAL_L,
TO_CHAR(SAL, '999,999.00') AS SAL_1,
TO_CHAR(SAL, '000,999,999.00') AS SAL_2,
TO_CHAR(SAL, '000999999.99') AS SAL_3,
TO_CHAR(SAL, '999,999,00') AS SAL_4,
FROM EMP;

-- 문자를 숫자로 명시적 변환
SELECT SAL, SAL+'500', SAL+'5000'
FROM EMP;

SELECT TO_NUMBER('5,000', '9,999')
FROM DUAL;

SELECT SAL, SAL+'500', SAL+TO_NUMBER('5,000', '9,999')
FROM EMP;

-- 문자를 날짜로.
SELECT TO_DATE('2018-07-14', 'YYYY-MM-DD') AS TODATE
FROM DUAL;

--1981년 6월 1일 이후에 입사한 사원 정보 출력하기
SELECT * FROM EMP
WHERE HIREDATE > TO_DATE('1981/06/01', 'YYYY/MM/DD');
-- 동일 코드
SELECT * FROM EMP
WHERE HIREDATE > '1981/06/01';



-- 결측치 처리하기
--NVL(NULL VALUE LOGIC) NULL 값을 처리하는 것임
SELECT EMPNO, ENAME, SAL+COMM
FROM EMP;  --한쪽이 NULL이면 다 NULL

SELECT EMPNO, ENAME, SAL+NVL(COMM, 0)
FROM EMP;  --한쪽이 NULL이여도 값을 낸다.

SELECT COMM
FROM EMP;

SELECT NVL(COMM, 0) --NULL이 생기면 0으로 대채하기
FROM EMP;

--NVL2
--NVL2(칼럼 이름, NULL이 아닐때 실행, NULL일때 실행)
SELECT NVL2(COMM, '0', '없음')  -- 두 개 다 문자열이 들어가야지 숫자가 들어가면 x
FROM EMP;

SELECT EMPNO, ENAME, COMM, NVL2(COMM, SAL*12 +COMM, SAL*12) AS ANNSAL
FROM EMP;

-- CASE문
SELECT EMPNO, ENAME, JOB, SAL,
CASE JOB
    WHEN 'MANAGER' THEN SAL*1.1
    WHEN 'SALESMAN' THEN SAL*1.05
    WHEN 'ANALYST' THEN SAL
    ELSE SAL*1.03
END AS UPSAL
FROM EMP;

SELECT EMPNO, ENAME, COMM,
CASE
    WHEN COMM IS NULL THEN '해당사항 없음'
    WHEN COMM = 0 THEN '수당없음'
    WHEN COMM > 0 THEN '수당: ' || COMM
END AS COMM_TEXT
FROM EMP;



-- 다중행함수 MULTI ROW FUNCTION
SELECT SUM(SAL)
FROM EMP; --SUM 함수로 1개의 ROW로 나오게 되었다.

SELECT ENAME, SAL
FROM EMP;

SELECT SUM(COMM)
FROM EMP; --결측치가 있으면 빼고 값을 내준다.

SELECT SUM(SAL), SUM(COMM)
FROM EMP;

SELECT COUNT(*)
FROM EMP;

SELECT COUNT(*)
FROM EMP
WHERE DEPTNO = 30;

-- COMM을 받은 사람은 몇 명?
SELECT COUNT(*)
FROM EMP
WHERE COMM  IS NOT NULL;

-- 부서번호 30번인 최대 SAL
SELECT MAX(SAL)
FROM EMP
WHERE DEPTNO = 30;

-- 가장 최근에 입사한 날짜
SELECT MAX(HIREDATE)
FROM EMP
WHERE DEPTNO = 30;

-- 부서번호 30번의 평균 연봉
SELECT ROUND(AVG(SAL), 2)
FROM EMP
WHERE DEPTNO = 30;

-- 부서 번호가 30인 사원들의 평균 추가 수당을 출력하기
SELECT AVG(COMM)
FROM EMP
WHERE DEPTNO = 30;

-- 부서별 평균연봉
SELECT DEPTNO,JOB, ROUND(AVG(SAL))
FROM EMP
GROUP BY DEPTNO, JOB;